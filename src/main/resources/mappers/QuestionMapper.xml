<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Question">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="question_no" jdbcType="INTEGER" property="questionNo" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="module_no" jdbcType="INTEGER" property="moduleNo" />
    <result column="correct_answer" jdbcType="VARCHAR" property="correctAnswer" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="knowledge" jdbcType="VARCHAR" property="knowledge" />
    <result column="score" jdbcType="DOUBLE" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, question_no, level, module_no, correct_answer, content, knowledge, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from question
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Question">
    insert into question (id, type, question_no, 
      level, module_no, correct_answer, 
      content, knowledge, score
      )
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{questionNo,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER}, #{moduleNo,jdbcType=INTEGER}, #{correctAnswer,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{knowledge,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="questionNo != null">
        question_no,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="moduleNo != null">
        module_no,
      </if>
      <if test="correctAnswer != null">
        correct_answer,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="knowledge != null">
        knowledge,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="questionNo != null">
        #{questionNo,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="moduleNo != null">
        #{moduleNo,jdbcType=INTEGER},
      </if>
      <if test="correctAnswer != null">
        #{correctAnswer,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="knowledge != null">
        #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Question">
    update question
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="questionNo != null">
        question_no = #{questionNo,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="moduleNo != null">
        module_no = #{moduleNo,jdbcType=INTEGER},
      </if>
      <if test="correctAnswer != null">
        correct_answer = #{correctAnswer,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="knowledge != null">
        knowledge = #{knowledge,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Question">
    update question
    set type = #{type,jdbcType=INTEGER},
      question_no = #{questionNo,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      module_no = #{moduleNo,jdbcType=INTEGER},
      correct_answer = #{correctAnswer,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      knowledge = #{knowledge,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>